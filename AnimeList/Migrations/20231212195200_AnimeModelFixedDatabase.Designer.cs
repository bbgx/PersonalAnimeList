// <auto-generated />
using System;
using AnimeList.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AnimeList.Migrations
{
    [DbContext(typeof(AnimeDbContext))]
    [Migration("20231212195200_AnimeModelFixedDatabase")]
    partial class AnimeModelFixedDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AnimeICollection.Models.AnimeModel.AnimeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AgeRating")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "rating");

                    b.Property<DateTimeOffset?>("AiredFrom")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Relational:JsonPropertyName", "aired.from");

                    b.Property<DateTimeOffset?>("AiredTo")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Relational:JsonPropertyName", "aired.to");

                    b.Property<bool?>("Airing")
                        .HasColumnType("boolean")
                        .HasAnnotation("Relational:JsonPropertyName", "airing");

                    b.Property<string>("AnimeCoverImage")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "images.jpg.large_image_url");

                    b.Property<string>("Background")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "background");

                    b.Property<string>("BroadcastedWeekDayAndTime")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "broadcast.string");

                    b.Property<string>("EpisodeDuration")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "duration");

                    b.Property<int>("Episodes")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "episodes");

                    b.Property<int>("MalId")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "mal_id");

                    b.Property<string>("MediaOriginalSource")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "source");

                    b.Property<string>("MyAnimeListUrl")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "url");

                    b.Property<int?>("Rank")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "rank");

                    b.Property<double?>("Score")
                        .HasColumnType("double precision")
                        .HasAnnotation("Relational:JsonPropertyName", "score");

                    b.Property<int?>("ScoredByUser")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "scored_by");

                    b.Property<string>("Season")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "season");

                    b.Property<string>("Status")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "status");

                    b.Property<string>("Synopsis")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "synopsis");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "title");

                    b.Property<string>("TitleEnglish")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "title_english");

                    b.Property<string>("TitleJapanese")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "title_japanese");

                    b.Property<string>("TrailerEmbedUrl")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "trailer.embed_url");

                    b.Property<string>("TrailerUrl")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "trailer.url");

                    b.Property<string>("TransmissionMedia")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "type");

                    b.HasKey("Id");

                    b.ToTable("Anime");
                });

            modelBuilder.Entity("AnimeICollection.Models.AnimeModel.AnimeModel+Demographic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnimeModelId")
                        .HasColumnType("integer");

                    b.Property<int?>("MalId")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "mal_id");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.HasKey("Id");

                    b.HasIndex("AnimeModelId");

                    b.ToTable("Demographic");

                    b.HasAnnotation("Relational:JsonPropertyName", "demographics");
                });

            modelBuilder.Entity("AnimeICollection.Models.AnimeModel.AnimeModel+Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnimeModelId")
                        .HasColumnType("integer");

                    b.Property<int?>("MalId")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "mal_id");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.HasKey("Id");

                    b.HasIndex("AnimeModelId");

                    b.ToTable("Genre");

                    b.HasAnnotation("Relational:JsonPropertyName", "genres");
                });

            modelBuilder.Entity("AnimeICollection.Models.AnimeModel.AnimeModel+Licensor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnimeModelId")
                        .HasColumnType("integer");

                    b.Property<int?>("MalId")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "mal_id");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.HasKey("Id");

                    b.HasIndex("AnimeModelId");

                    b.ToTable("Licensor");

                    b.HasAnnotation("Relational:JsonPropertyName", "licensors");
                });

            modelBuilder.Entity("AnimeICollection.Models.AnimeModel.AnimeModel+Producer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnimeModelId")
                        .HasColumnType("integer");

                    b.Property<int?>("MalId")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "mal_id");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<string>("Type")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "type");

                    b.HasKey("Id");

                    b.HasIndex("AnimeModelId");

                    b.ToTable("Producer");

                    b.HasAnnotation("Relational:JsonPropertyName", "producers");
                });

            modelBuilder.Entity("AnimeICollection.Models.AnimeModel.AnimeModel+Streaming", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnimeModelId")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.HasKey("Id");

                    b.HasIndex("AnimeModelId");

                    b.ToTable("Streaming");

                    b.HasAnnotation("Relational:JsonPropertyName", "streaming");
                });

            modelBuilder.Entity("AnimeICollection.Models.AnimeModel.AnimeModel+Studio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnimeModelId")
                        .HasColumnType("integer");

                    b.Property<int?>("MalId")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "mal_id");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.HasKey("Id");

                    b.HasIndex("AnimeModelId");

                    b.ToTable("Studio");

                    b.HasAnnotation("Relational:JsonPropertyName", "studios");
                });

            modelBuilder.Entity("AnimeICollection.Models.AnimeModel.AnimeModel+Theme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnimeModelId")
                        .HasColumnType("integer");

                    b.Property<int?>("MalId")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "mal_id");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.HasKey("Id");

                    b.HasIndex("AnimeModelId");

                    b.ToTable("Theme");

                    b.HasAnnotation("Relational:JsonPropertyName", "themes");
                });

            modelBuilder.Entity("AnimeICollection.Models.AnimeModel.AnimeModel+Demographic", b =>
                {
                    b.HasOne("AnimeICollection.Models.AnimeModel.AnimeModel", null)
                        .WithMany("MediaDemographics")
                        .HasForeignKey("AnimeModelId");
                });

            modelBuilder.Entity("AnimeICollection.Models.AnimeModel.AnimeModel+Genre", b =>
                {
                    b.HasOne("AnimeICollection.Models.AnimeModel.AnimeModel", null)
                        .WithMany("MediaGenres")
                        .HasForeignKey("AnimeModelId");
                });

            modelBuilder.Entity("AnimeICollection.Models.AnimeModel.AnimeModel+Licensor", b =>
                {
                    b.HasOne("AnimeICollection.Models.AnimeModel.AnimeModel", null)
                        .WithMany("MediaLicensors")
                        .HasForeignKey("AnimeModelId");
                });

            modelBuilder.Entity("AnimeICollection.Models.AnimeModel.AnimeModel+Producer", b =>
                {
                    b.HasOne("AnimeICollection.Models.AnimeModel.AnimeModel", null)
                        .WithMany("MediaProducers")
                        .HasForeignKey("AnimeModelId");
                });

            modelBuilder.Entity("AnimeICollection.Models.AnimeModel.AnimeModel+Streaming", b =>
                {
                    b.HasOne("AnimeICollection.Models.AnimeModel.AnimeModel", null)
                        .WithMany("StreamingWebsites")
                        .HasForeignKey("AnimeModelId");
                });

            modelBuilder.Entity("AnimeICollection.Models.AnimeModel.AnimeModel+Studio", b =>
                {
                    b.HasOne("AnimeICollection.Models.AnimeModel.AnimeModel", null)
                        .WithMany("MediaStudios")
                        .HasForeignKey("AnimeModelId");
                });

            modelBuilder.Entity("AnimeICollection.Models.AnimeModel.AnimeModel+Theme", b =>
                {
                    b.HasOne("AnimeICollection.Models.AnimeModel.AnimeModel", null)
                        .WithMany("MediaThemes")
                        .HasForeignKey("AnimeModelId");
                });

            modelBuilder.Entity("AnimeICollection.Models.AnimeModel.AnimeModel", b =>
                {
                    b.Navigation("MediaDemographics");

                    b.Navigation("MediaGenres");

                    b.Navigation("MediaLicensors");

                    b.Navigation("MediaProducers");

                    b.Navigation("MediaStudios");

                    b.Navigation("MediaThemes");

                    b.Navigation("StreamingWebsites");
                });
#pragma warning restore 612, 618
        }
    }
}
