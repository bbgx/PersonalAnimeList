// <auto-generated />
using System;
using System.Collections.Generic;
using AnimeList.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AnimeList.Migrations
{
    [DbContext(typeof(AnimeDbContext))]
    [Migration("20231209065713_ModifyModelTypes")]
    partial class ModifyModelTypes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AnimeList.Models.AnimeModel.Aired", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<DateTimeOffset?>("From")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("PropId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("To")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("PropId");

                    b.ToTable("Aired");
                });

            modelBuilder.Entity("AnimeList.Models.AnimeModel.AnimeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("DataId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DataId");

                    b.ToTable("Animes");
                });

            modelBuilder.Entity("AnimeList.Models.AnimeModel.Broadcast", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("Day")
                        .HasColumnType("text");

                    b.Property<string>("String")
                        .HasColumnType("text");

                    b.Property<string>("Time")
                        .HasColumnType("text");

                    b.Property<string>("Timezone")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Broadcast");
                });

            modelBuilder.Entity("AnimeList.Models.AnimeModel.Data", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AiredId")
                        .HasColumnType("integer");

                    b.Property<bool?>("Airing")
                        .HasColumnType("boolean");

                    b.Property<bool?>("Approved")
                        .HasColumnType("boolean");

                    b.Property<string>("Background")
                        .HasColumnType("text");

                    b.Property<int?>("BroadcastId")
                        .HasColumnType("integer");

                    b.Property<string>("Duration")
                        .HasColumnType("text");

                    b.Property<long?>("Episodes")
                        .HasColumnType("bigint");

                    b.Property<long?>("Favorites")
                        .HasColumnType("bigint");

                    b.Property<int?>("ImagesId")
                        .HasColumnType("integer");

                    b.Property<long?>("MalId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Members")
                        .HasColumnType("bigint");

                    b.Property<long?>("Popularity")
                        .HasColumnType("bigint");

                    b.Property<long?>("Rank")
                        .HasColumnType("bigint");

                    b.Property<string>("Rating")
                        .HasColumnType("text");

                    b.Property<long?>("Score")
                        .HasColumnType("bigint");

                    b.Property<long?>("ScoredBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Season")
                        .HasColumnType("text");

                    b.Property<string>("Source")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("Synopsis")
                        .HasColumnType("text");

                    b.Property<int?>("ThemeId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("TitleEnglish")
                        .HasColumnType("text");

                    b.Property<string>("TitleJapanese")
                        .HasColumnType("text");

                    b.Property<string[]>("TitleSynonyms")
                        .HasColumnType("text[]");

                    b.Property<int?>("TrailerId")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.Property<long?>("Year")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AiredId");

                    b.HasIndex("BroadcastId");

                    b.HasIndex("ImagesId");

                    b.HasIndex("ThemeId");

                    b.HasIndex("TrailerId");

                    b.ToTable("Data");
                });

            modelBuilder.Entity("AnimeList.Models.AnimeModel.Demographic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("DataForDemographicsId")
                        .HasColumnType("integer");

                    b.Property<int?>("DataForExplicitGenres")
                        .HasColumnType("integer");

                    b.Property<int?>("DataForGenres")
                        .HasColumnType("integer");

                    b.Property<int?>("DataForThemesId")
                        .HasColumnType("integer");

                    b.Property<int?>("DataIdForDemographics")
                        .HasColumnType("integer");

                    b.Property<int?>("DataIdForExplicitGenres")
                        .HasColumnType("integer");

                    b.Property<int?>("DataIdForGenres")
                        .HasColumnType("integer");

                    b.Property<int?>("DataIdForLicensors")
                        .HasColumnType("integer");

                    b.Property<int?>("DataIdForProducers")
                        .HasColumnType("integer");

                    b.Property<int?>("DataIdForStudios")
                        .HasColumnType("integer");

                    b.Property<int?>("DataIdForThemes")
                        .HasColumnType("integer");

                    b.Property<long?>("MalId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("RelationId")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DataForDemographicsId");

                    b.HasIndex("DataForThemesId");

                    b.HasIndex("DataIdForDemographics");

                    b.HasIndex("DataIdForExplicitGenres");

                    b.HasIndex("DataIdForGenres");

                    b.HasIndex("DataIdForLicensors");

                    b.HasIndex("DataIdForProducers");

                    b.HasIndex("DataIdForStudios");

                    b.HasIndex("DataIdForThemes");

                    b.HasIndex("RelationId");

                    b.ToTable("Demographic");
                });

            modelBuilder.Entity("AnimeList.Models.AnimeModel.External", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("DataId")
                        .HasColumnType("integer");

                    b.Property<int?>("EDataId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DataId");

                    b.HasIndex("EDataId");

                    b.ToTable("External");
                });

            modelBuilder.Entity("AnimeList.Models.AnimeModel.FromTo", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<int?>("Day")
                        .HasColumnType("integer");

                    b.Property<int?>("Month")
                        .HasColumnType("integer");

                    b.Property<int?>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("FromTo");
                });

            modelBuilder.Entity("AnimeList.Models.AnimeModel.ImageDetails", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("LargeImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("SmallImageUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ImageDetails");
                });

            modelBuilder.Entity("AnimeList.Models.AnimeModel.Images", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<int?>("JpgId")
                        .HasColumnType("integer");

                    b.Property<int?>("WebpId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("JpgId");

                    b.HasIndex("WebpId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("AnimeList.Models.AnimeModel.Prop", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<int?>("FromId")
                        .HasColumnType("integer");

                    b.Property<int?>("ToId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FromId");

                    b.HasIndex("ToId");

                    b.ToTable("Prop");
                });

            modelBuilder.Entity("AnimeList.Models.AnimeModel.Relation", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<int?>("DataId")
                        .HasColumnType("integer");

                    b.Property<string>("RelationType")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DataId");

                    b.ToTable("Relation");
                });

            modelBuilder.Entity("AnimeList.Models.AnimeModel.Theme", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<List<string>>("Endings")
                        .HasColumnType("text[]");

                    b.Property<List<string>>("Openings")
                        .HasColumnType("text[]");

                    b.HasKey("Id");

                    b.ToTable("Theme");
                });

            modelBuilder.Entity("AnimeList.Models.AnimeModel.Title", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<int?>("DataId")
                        .HasColumnType("integer");

                    b.Property<string>("TitleTitle")
                        .HasColumnType("text");

                    b.Property<string>("TitleType")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DataId");

                    b.ToTable("Title");
                });

            modelBuilder.Entity("AnimeList.Models.AnimeModel.Trailer", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("EmbedUrl")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.Property<string>("YoutubeId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Trailer");
                });

            modelBuilder.Entity("AnimeList.Models.AnimeModel.Aired", b =>
                {
                    b.HasOne("AnimeList.Models.AnimeModel.Prop", "Prop")
                        .WithMany()
                        .HasForeignKey("PropId");

                    b.Navigation("Prop");
                });

            modelBuilder.Entity("AnimeList.Models.AnimeModel.AnimeModel", b =>
                {
                    b.HasOne("AnimeList.Models.AnimeModel.Data", "Data")
                        .WithMany()
                        .HasForeignKey("DataId");

                    b.Navigation("Data");
                });

            modelBuilder.Entity("AnimeList.Models.AnimeModel.Data", b =>
                {
                    b.HasOne("AnimeList.Models.AnimeModel.Aired", "Aired")
                        .WithMany()
                        .HasForeignKey("AiredId");

                    b.HasOne("AnimeList.Models.AnimeModel.Broadcast", "Broadcast")
                        .WithMany()
                        .HasForeignKey("BroadcastId");

                    b.HasOne("AnimeList.Models.AnimeModel.Images", "Images")
                        .WithMany()
                        .HasForeignKey("ImagesId");

                    b.HasOne("AnimeList.Models.AnimeModel.Theme", "Theme")
                        .WithMany()
                        .HasForeignKey("ThemeId");

                    b.HasOne("AnimeList.Models.AnimeModel.Trailer", "Trailer")
                        .WithMany()
                        .HasForeignKey("TrailerId");

                    b.Navigation("Aired");

                    b.Navigation("Broadcast");

                    b.Navigation("Images");

                    b.Navigation("Theme");

                    b.Navigation("Trailer");
                });

            modelBuilder.Entity("AnimeList.Models.AnimeModel.Demographic", b =>
                {
                    b.HasOne("AnimeList.Models.AnimeModel.Data", "DataForDemographics")
                        .WithMany()
                        .HasForeignKey("DataForDemographicsId");

                    b.HasOne("AnimeList.Models.AnimeModel.Data", "DataForThemes")
                        .WithMany()
                        .HasForeignKey("DataForThemesId");

                    b.HasOne("AnimeList.Models.AnimeModel.Data", null)
                        .WithMany("Demographics")
                        .HasForeignKey("DataIdForDemographics");

                    b.HasOne("AnimeList.Models.AnimeModel.Data", null)
                        .WithMany("ExplicitGenres")
                        .HasForeignKey("DataIdForExplicitGenres");

                    b.HasOne("AnimeList.Models.AnimeModel.Data", null)
                        .WithMany("Genres")
                        .HasForeignKey("DataIdForGenres");

                    b.HasOne("AnimeList.Models.AnimeModel.Data", "DataForLicensors")
                        .WithMany("Licensors")
                        .HasForeignKey("DataIdForLicensors");

                    b.HasOne("AnimeList.Models.AnimeModel.Data", "DataForProducers")
                        .WithMany("Producers")
                        .HasForeignKey("DataIdForProducers");

                    b.HasOne("AnimeList.Models.AnimeModel.Data", "DataForStudios")
                        .WithMany("Studios")
                        .HasForeignKey("DataIdForStudios");

                    b.HasOne("AnimeList.Models.AnimeModel.Data", null)
                        .WithMany("Themes")
                        .HasForeignKey("DataIdForThemes");

                    b.HasOne("AnimeList.Models.AnimeModel.Relation", null)
                        .WithMany("Entry")
                        .HasForeignKey("RelationId");

                    b.Navigation("DataForDemographics");

                    b.Navigation("DataForLicensors");

                    b.Navigation("DataForProducers");

                    b.Navigation("DataForStudios");

                    b.Navigation("DataForThemes");
                });

            modelBuilder.Entity("AnimeList.Models.AnimeModel.External", b =>
                {
                    b.HasOne("AnimeList.Models.AnimeModel.Data", null)
                        .WithMany("Streaming")
                        .HasForeignKey("DataId");

                    b.HasOne("AnimeList.Models.AnimeModel.Data", "Data")
                        .WithMany("External")
                        .HasForeignKey("EDataId");

                    b.Navigation("Data");
                });

            modelBuilder.Entity("AnimeList.Models.AnimeModel.Images", b =>
                {
                    b.HasOne("AnimeList.Models.AnimeModel.ImageDetails", "Jpg")
                        .WithMany()
                        .HasForeignKey("JpgId");

                    b.HasOne("AnimeList.Models.AnimeModel.ImageDetails", "Webp")
                        .WithMany()
                        .HasForeignKey("WebpId");

                    b.Navigation("Jpg");

                    b.Navigation("Webp");
                });

            modelBuilder.Entity("AnimeList.Models.AnimeModel.Prop", b =>
                {
                    b.HasOne("AnimeList.Models.AnimeModel.FromTo", "From")
                        .WithMany()
                        .HasForeignKey("FromId");

                    b.HasOne("AnimeList.Models.AnimeModel.FromTo", "To")
                        .WithMany()
                        .HasForeignKey("ToId");

                    b.Navigation("From");

                    b.Navigation("To");
                });

            modelBuilder.Entity("AnimeList.Models.AnimeModel.Relation", b =>
                {
                    b.HasOne("AnimeList.Models.AnimeModel.Data", null)
                        .WithMany("Relations")
                        .HasForeignKey("DataId");
                });

            modelBuilder.Entity("AnimeList.Models.AnimeModel.Title", b =>
                {
                    b.HasOne("AnimeList.Models.AnimeModel.Data", null)
                        .WithMany("Titles")
                        .HasForeignKey("DataId");
                });

            modelBuilder.Entity("AnimeList.Models.AnimeModel.Data", b =>
                {
                    b.Navigation("Demographics");

                    b.Navigation("ExplicitGenres");

                    b.Navigation("External");

                    b.Navigation("Genres");

                    b.Navigation("Licensors");

                    b.Navigation("Producers");

                    b.Navigation("Relations");

                    b.Navigation("Streaming");

                    b.Navigation("Studios");

                    b.Navigation("Themes");

                    b.Navigation("Titles");
                });

            modelBuilder.Entity("AnimeList.Models.AnimeModel.Relation", b =>
                {
                    b.Navigation("Entry");
                });
#pragma warning restore 612, 618
        }
    }
}
